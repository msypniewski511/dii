# Name of your application. Used to uniquely configure containers.
service: my-app

# Name of the container image.
image: user/my-app

# Deploy to these servers.
servers:
  web:
    - "//web IP//"
  sidekiq:
    cmd: bin/sidekiq
    hosts:
      - "//sidekiq IP//"

# Use a different ssh user than root
ssh:
  user: www

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  # server: registry.digitalocean.com / ghcr.io / ...
  username: my-user

  # Always use an access token rather than real password when possible.
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
# env:
#   clear:
#     DB_HOST: 192.168.0.2
#   secret:
#     - RAILS_MASTER_KEY

# Use a different ssh user than root
# ssh:
#   user: app

# Configure builder setup.
builder:
  args:
    RUBY_VERSION: 3.2.0
    RAILS_ENV: production
		  NODE_VERSION: 20.17.0
		  YARN_VERSION: 1.22.22
  multiarch: false
  cache:
    type: registry
    image: onetribe-build-cache
    options: mode=max,image-manifest=true,oci-mediatypes=true

# Container run setup
env:
  clear:
    RAILS_LOG_TO_STDOUT: 1
    RAILS_SERVE_STATIC_FILES: 1
    RAILS_ENV: production
  secret:
    - RAILS_MASTER_KEY
    - DATABASE_URL
    - REDIS_URL

# Configure a custom healthcheck (default is /up on port 3000)
healthcheck:
  path: /health
